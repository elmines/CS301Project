@model UAMovie.Models.ViewModels.MovieAccountUserViewModel
@{
    ViewData["Title"] = Model.movie.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.HiddenFor(model => model.user.Username)
@Html.HiddenFor(model => model.user.EmailAddress)

@{
    Tuple<Int32, float> reviewData = UAMovie.Controllers.ReviewController.getAverageRating(Model.movie.Name);
    String reviewDescription = "Not yet reviewed";
    if (reviewData.Item1 > 0)
    {
        reviewDescription = String.Format("Rated {0:F1}/{1:F1} by {2:n0} viewer(s)",
            reviewData.Item2, 5.0, reviewData.Item1);
    }

}

<h2>@ViewData["Title"]</h2>
<p><em>@Html.DisplayFor(model => model.movie.ReleaseDate)</em></p>
<ul>
    <li>Rated <strong>@Html.DisplayFor(model => model.movie.AgeRating)</strong>, @Html.DisplayFor(model => model.movie.Genre)</li>
    <li>@Model.movie.durationText</li>
    <li>@reviewDescription</li>
</ul>

<p>@Html.DisplayFor(model => model.movie.Synopsis)</p>

<table>
    <thead><tr><td><strong>Actor</strong></td><td><strong>Role</strong></td></tr></thead>

    @{ 
        foreach (Cast castMember in Model.cast)
        {
            <tr><td>@castMember.Actor</td><td>@castMember.Character</td></tr>
        }
    }
</table>

<p>@Html.ActionLink("Go back", "GetMovie", "MovieAccountUserViewModel", new { movieAccountUserViewModel = Model, movieName = Model.movie.Name })</p>

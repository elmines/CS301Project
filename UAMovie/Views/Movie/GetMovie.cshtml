@model UAMovie.Models.ViewModels.MovieAccountUserViewModel
@{
    ViewData["Title"] = Model.movie.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.HiddenFor(model => model.user.Username)
@Html.HiddenFor(model => model.user.EmailAddress)

@{
    int hours = Model.movie.Duration / 60;
    int minutes = Model.movie.Duration % 60;
    String length;
    if (minutes > 0)
    {
        length = String.Format("{0} hours and {1} minutes", hours, minutes);
    }
    else
    {
        length = String.Format("{0} hours", hours);
    }

    float avgRating = 4.9f;
    int numRatings = 1000000000;


    Boolean hasWatched = true;
}

<h2>@Model.movie.Name</h2>
<p><em>@Html.DisplayFor(model => model.movie.ReleaseDate)</em></p>
<ul>
    <li>Rated <strong>@Html.DisplayFor(model => model.movie.AgeRating)</strong>, @Html.DisplayFor(model => model.movie.Genre)</li>
    <li>@length</li>
    <li>Rated @String.Format("{0:F1}/{1:F1}", avgRating, 5.0) by @String.Format("{0:n0}", numRatings) viewers</li>
</ul>


<ul class="horizontal-list">
    <li>
        @Html.ActionLink("Learn more", "GetMovieDetails", "MovieAccountUserViewModel", new { movieAccountUserViewModel = Model, movieName = Model.movie.Name })
    </li>
    <li>
        | @Html.ActionLink("Reviews", "GetReviews", "MovieAccountUserViewModel", new { movieAccounterUserViewModel = Model, movieName = Model.movie.Name })
    </li>

    @{
        if (hasWatched)
        {
            <li>
                | @Html.ActionLink("Write Review", "WriteReview", "MovieAccountUserViewModel", new { userName = Model.user.Username, movieName = Model.movie.Name })
            </li>
        }
    }
</ul>


<p>@Html.ActionLink("Back to Now Playing", "GetNowPlaying", "MovieAccountUserViewModel", new { movieAccountUserViewModel = Model })</p>
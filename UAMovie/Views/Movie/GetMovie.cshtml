@model UAMovie.Models.ViewModels.MovieAccountUserViewModel
@{
    ViewData["Title"] = Model.movie.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.HiddenFor(model => model.user.Username)
@Html.HiddenFor(model => model.user.EmailAddress)
@{
    Tuple<Int32, float> reviewData = UAMovie.Controllers.ReviewController.getAverageRating(Model.movie.Name);
    String reviewDescription = "Not yet reviewed";
    if (reviewData.Item1 > 0)
    {
        reviewDescription = String.Format("Rated {0:F1}/{1:F1} by {2:n0} viewer(s)",
            reviewData.Item2, 5.0, reviewData.Item1);
    }

}
<h2>@Model.movie.Name</h2>
<p><em>@Html.DisplayFor(model => model.movie.ReleaseDate)</em></p>
<ul>
    <li>Rated <strong>@Html.DisplayFor(model => model.movie.AgeRating)</strong>, @Html.DisplayFor(model => model.movie.Genre)</li>
    <li>@Model.movie.durationText</li>
    <li>@reviewDescription</li>
</ul>

<ul class="horizontal-list">
    <li>
        @Html.ActionLink("Buy Ticket", "SearchForTheaters", "TheaterViewModel", new { userName = Model.user.Username, movieName = Model.movie.Name })
    </li>
    <li>
        | @Html.ActionLink("Learn more", "GetMovieDetails", "MovieAccountUserViewModel", new { username = Model.user.Username, movieName = Model.movie.Name })
    </li>
    <li>
        | @Html.ActionLink("Reviews", "GetReviews", "MovieAccountUserViewModel", new { username = Model.user.Username, movieName = Model.movie.Name })
    </li>
</ul>

<p>@Html.ActionLink("Back to Now Playing", "GetNowPlaying", "MovieAccountUserViewModel", new { userName = Model.user.Username })</p>